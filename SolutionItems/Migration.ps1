function VeloTransfer.CreateMigration 
{
    param (
        [Parameter(Mandatory=$true)][string]$MigrationName,
        [Parameter(Mandatory=$true)][string]$ProjectPath,
        [Parameter(Mandatory=$true)][string]$Context,
        [Parameter(Mandatory=$true)][string]$Configuration
    )
    
    $migrationDirectory = "Migrations_"+$Context
    Write-Host("dotnet ef migrations add $MigrationName --project $ProjectPath --context $Context -o $migrationDirectory --no-build --configuration $Configuration")
    dotnet ef migrations add $MigrationName --project $ProjectPath --context $Context -o $migrationDirectory --no-build --configuration $Configuration

    Write-Host("Post migration work in progress...")
    $migrationFiles = Get-ChildItem $ProjectPath/$migrationDirectory/*_$MigrationName.cs
    foreach($file in $migrationFiles)
    {
        $fileContent = Get-Content $file
        if ($fileContent[0] -ne $autoGenerated)
        {
            $("// <auto-generated />"; $fileContent) | Set-Content $file
        }
    }
    Write-Host("Post migration work done!")
    Write-Host("")
    return $True
}

function VeloTransfer.BuildProject 
{
    param (
        [Parameter(Mandatory=$true)][string]$ProjectPath,
        [Parameter(Mandatory=$true)][string]$Configuration
    )
    
    Write-Host("dotnet build $ProjectPath --configuration $Configuration")
    dotnet build $ProjectPath --configuration $Configuration | Tee-Object -Variable buildOutput | Write-Host
    if ($buildOutput -contains "Build succeeded." -and $buildOutput -like "* 0 Error(s)*" -and $buildOutput -like "*0 Warning(s)*")
    {
        return $True
    }

    return $False
}

function VeloTransfer.PrepareEnvironment
{
    if ($NULL -eq (Get-Command "dotnet-ef" -ErrorAction SilentlyContinue)) 
    {
        dotnet tool install --global dotnet-ef
    }


}

$configuration = "Release"
$projectPath = "../VeloTransfer.DbConfiguration"
$migrationName = Read-Host -Prompt 'Migration name'

$buildSucceeded = VeloTransfer.BuildProject -ProjectPath $projectPath -Configuration $configuration
if ($buildSucceeded)
{
    VeloTransfer.CreateMigration -MigrationName $migrationName -ProjectPath $projectPath -Context VeloTransferDataContext    -Configuration $configuration
    VeloTransfer.CreateMigration -MigrationName $migrationName -ProjectPath $projectPath -Context VeloTransferHistoryContext -Configuration $configuration
}